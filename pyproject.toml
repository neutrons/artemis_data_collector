[project]
name = "artemis_data_collector"
description = "Artemis Data Collector"
dynamic = ["version"]
license = { text = "MIT" }
keywords = ["neutrons", "example", "python"]
readme = "README.md"

[project.urls]
homepage = "https://github.com/neutrons/artemis_data_collector/"  # if no homepage, use repo url
repository = "https://github.com/neutrons/artemis_data_collector/"
# documentation = add_url_to_readthedoc_here
issues = "https://github.com/neutrons/artemis_data_collector/issues"

[build-system]
requires = [
  "setuptools>= 42",
  "versioningit"
]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "src/artemis_data_collector/_version.py"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "scripts*", "docs*", "notebooks*"]

[tool.setuptools.package-data]
"*" = ["*.yml","*.yaml","*.ini"]

[project.scripts]
artemis_data_collector = "artemis_data_collector.artemis_data_collector:main"

[tool.pytest.ini_options]
pythonpath = [
  ".", "src", "scripts"
]
testpaths = ["tests"]
python_files = ["test*.py"]
norecursedirs = [".git", "tmp*", "_tmp*", "__pycache__", "*dataset*", "*data_set*"]

[tool.ruff]
line-length = 120
select = ["A", "ARG","ASYNC","BLE","C90", "E", "F", "I", "N", "UP032", "W"]

# Add additional 3rd party tool configuration here as needed

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
python = ">=3.12"
requests = "*"
"stomp.py" = "7.*"
psycopg = ">=3.2"
versioningit = ">=3.2.0"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.pixi.feature.dev.dependencies]
pre-commit = "*"

[tool.pixi.feature.dev.pypi-dependencies]
artemis_data_collector = { path = ".", editable = true }

[tool.pixi.feature.build.dependencies]
python-build = "*"
setuptools = "*"

[tool.pixi.feature.deploy.dependencies]
pip = "*"

[tool.pixi.environments]
default = { features = ["dev", "build", "test"]}
test = { features = ["test"]}
build = { features = ["build"]}
deploy = {features = ["deploy"]}

[tool.pixi.tasks]
test = "python -m pytest tests"
test-cov = "python -m pytest --cov=src --cov-report=xml --cov-report=term-missing tests"
build = "python -m build"
